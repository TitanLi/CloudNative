[DEFAULT]
use_stderr = true
bindir = /opt/stack/kuryr-k8s-controller/env/libexec/kuryr
#
# From kuryr_kubernetes
#

# Directory for Kuryr vif binding executables. (string value)
#bindir = /usr/libexec/kuryr

# Neutron subnetpool name will be prefixed by this. (string value)
#subnetpool_name_prefix = kuryrPool

# baremetal or nested-containers are the supported values. (string value)
#deployment_type = baremetal

# If set to true, the logging level will be set to DEBUG instead of the default
# INFO level. (boolean value)
# Note: This option can be changed without restarting.
#debug = false

# The name of a logging configuration file. This file is appended to any
# existing logging configuration files. For details about logging configuration
# files, see the Python logging module documentation. Note that when logging
# configuration files are used then all logging configuration is set in the
# configuration file and other logging configuration options are ignored (for
# example, log-date-format). (string value)
# Note: This option can be changed without restarting.
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# Defines the format string for %%(asctime)s in log records. Default:
# %(default)s . This option is ignored if log_config_append is set. (string
# value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to send logging output to. If no default is set,
# logging will go to stderr as defined by use_stderr. This option is ignored if
# log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative log_file  paths. This option
# is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>

# Uses logging handler designed to watch file system. When log file is moved or
# removed this handler will open a new log file with specified path
# instantaneously. It makes sense only if log_file option is specified and
# Linux platform is used. This option is ignored if log_config_append is set.
# (boolean value)
#watch_log_file = false

# Use syslog for logging. Existing syslog format is DEPRECATED and will be
# changed later to honor RFC5424. This option is ignored if log_config_append
# is set. (boolean value)
#use_syslog = false

# Enable journald for logging. If running in a systemd environment you may wish
# to enable journal support. Doing so will use the journal native protocol
# which includes structured metadata in addition to log messages.This option is
# ignored if log_config_append is set. (boolean value)
#use_journal = false

# Syslog facility to receive log lines. This option is ignored if
# log_config_append is set. (string value)
#syslog_log_facility = LOG_USER

# Use JSON formatting for logging. This option is ignored if log_config_append
# is set. (boolean value)
#use_json = false

# Log output to standard error. This option is ignored if log_config_append is
# set. (boolean value)
#use_stderr = false

# Log output to Windows Event Log. (boolean value)
#use_eventlog = false

# The amount of time before the log files are rotated. This option is ignored
# unless log_rotation_type is setto "interval". (integer value)
#log_rotate_interval = 1

# Rotation interval type. The time of the last file change (or the time when
# the service was started) is used when scheduling the next rotation. (string
# value)
# Possible values:
# Seconds - <No description provided>
# Minutes - <No description provided>
# Hours - <No description provided>
# Days - <No description provided>
# Weekday - <No description provided>
# Midnight - <No description provided>
#log_rotate_interval_type = days

# Maximum number of rotated log files. (integer value)
#max_logfile_count = 30

# Log file maximum size in MB. This option is ignored if "log_rotation_type" is
# not set to "size". (integer value)
#max_logfile_size_mb = 200

# Log rotation type. (string value)
# Possible values:
# interval - Rotate logs at predefined time intervals.
# size - Rotate logs once they reach a predefined size.
# none - Do not rotate log files.
#log_rotation_type = none

# Format string to use for log messages with context. Used by
# oslo_log.formatters.ContextFormatter (string value)
#logging_context_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages when context is undefined. Used by
# oslo_log.formatters.ContextFormatter (string value)
#logging_default_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Additional data to append to log message when logging level for the message
# is DEBUG. Used by oslo_log.formatters.ContextFormatter (string value)
#logging_debug_format_suffix = %(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format. Used by
# oslo_log.formatters.ContextFormatter (string value)
#logging_exception_prefix = %(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s

# Defines the format string for %(user_identity)s that is used in
# logging_context_format_string. Used by oslo_log.formatters.ContextFormatter
# (string value)
#logging_user_identity_format = %(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s

# List of package logging levels in logger=LEVEL pairs. This option is ignored
# if log_config_append is set. (list value)
#default_log_levels = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,oslo_messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN,keystoneauth=WARN,oslo.cache=INFO,oslo_policy=INFO,dogpile.core.dogpile=INFO

# Enables or disables publication of error events. (boolean value)
#publish_errors = false

# The format for an instance that is passed with the log message. (string
# value)
#instance_format = "[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log message. (string
# value)
#instance_uuid_format = "[instance: %(uuid)s] "

# Interval, number of seconds, of log rate limiting. (integer value)
#rate_limit_interval = 0

# Maximum number of logged messages per rate_limit_interval. (integer value)
#rate_limit_burst = 0

# Log level name used by rate limiting: CRITICAL, ERROR, INFO, WARNING, DEBUG
# or empty string. Logs with level greater or equal to rate_limit_except_level
# are not filtered. An empty string means that all levels are filtered. (string
# value)
#rate_limit_except_level = CRITICAL

# Enables or disables fatal status of deprecations. (boolean value)
#fatal_deprecations = false


[binding]
# Configuration options for container interface binding.

#
# From kuryr_kubernetes
#

# The name prefix of the veth endpoint put inside the container. (string value)
#veth_dst_prefix = eth

# Driver to use for binding and unbinding ports. (string value)
# Deprecated group/name - [binding]/driver
#default_driver = kuryr.lib.binding.drivers.veth

# Drivers to use for binding and unbinding ports. (list value)
#enabled_drivers = kuryr.lib.binding.drivers.veth

# Specifies the name of the Nova instance interface to link the virtual devices
# to (only applicable to some binding drivers. (string value)
#link_iface =


[cache_defaults]

#
# From kuryr_kubernetes
#

# Enable caching. (boolean value)
#enabled = true

# Select backend cache option. (string value)
#backend = dogpile.cache.memory


[cni_daemon]

#
# From kuryr_kubernetes
#

# Bind address for CNI daemon HTTP server. It is recommened to allow only local
# connections. (string value)
#bind_address = 127.0.0.1:50036

# Maximum number of processes that will be spawned to process requests from CNI
# driver. (integer value)
#worker_num = 30

# Time (in seconds) the CNI daemon will wait for VIF annotation to appear in
# pod metadata before failing the CNI request. (integer value)
#vif_annotation_timeout = 60

# Kuryr uses pyroute2 library to manipulate networking interfaces. When
# processing a high number of Kuryr requests in parallel, it may take kernel
# more time to process all networking stack changes. This option allows to tune
# internal pyroute2 timeout. (integer value)
#pyroute2_timeout = 10

# Set to True when you are running kuryr-daemon inside a Docker container on
# Kubernetes host. E.g. as DaemonSet on Kubernetes cluster Kuryr is supposed to
# provide networking for. This mainly means that kuryr-daemon will look for
# network namespaces in $netns_proc_dir instead of /proc. (boolean value)
#docker_mode = false

# When docker_mode is set to True, this config option should be set to where
# host's /proc directory is mounted. Please note that mounting it is necessary
# to allow Kuryr-Kubernetes to move host interfaces between host network
# namespaces, which is essential for Kuryr to work. (string value)
#netns_proc_dir = <None>

# Maximum number of consecutive failures of kuryr-daemon when processing
# requests. If this number is exceeded, kuryr-daemon will be marked as
# unhealthy. (integer value)
#cni_failures_count = 3


[cni_health_server]

#
# From kuryr_kubernetes
#

# Port for CNI Health HTTP Server. (integer value)
#port = 8090

# Maximum memory usage (MiB) for CNI Health Server process. If this value is
# exceeded kuryr-daemon will be marked as unhealthy. (integer value)
#max_memory_usage = -1

# sysfs path to the CNI cgroup. This is used for resource tracking and as such
# should point to the cgroup hierarchy leaf. It only applies when non
# containerized (string value)
#cg_path = /sys/fs/cgroup/memory/system.slice/kuryr-cni.service


[health_server]

#
# From kuryr_kubernetes
#

# port for Health HTTP Server. (integer value)
#port = 8082


[ingress]

#
# From kuryr_kubernetes
#

# UUID of the L7 Router (string value)
#l7_router_uuid = <None>


[kubernetes]
api_root = https://10.0.1.11:6443
ssl_ca_crt_file = /etc/kubernetes/pki/ca.crt
token_file = /home/ubuntu/token
#
# From kuryr_kubernetes
#

# The root URL of the Kubernetes API (string value)
#api_root = http://localhost:8080

# Absolute path to client cert to connect to HTTPS K8S_API (string value)
#ssl_client_crt_file = <None>

# Absolute path client key file to connect to HTTPS K8S_API (string value)
#ssl_client_key_file = <None>

# Absolute path to ca cert file to connect to HTTPS K8S_API (string value)
#ssl_ca_crt_file = <None>

# HTTPS K8S_API server identity verification (boolean value)
#ssl_verify_server_crt = false

# The token to talk to the k8s API (string value)
#token_file =

# The driver to determine OpenStack project for pod ports (string value)
#pod_project_driver = default

# The driver to determine OpenStack project for services (string value)
#service_project_driver = default

# The driver to determine OpenStack project for namespaces (string value)
#namespace_project_driver = default

# The driver to determine OpenStack project for network policies (string value)
#network_policy_project_driver = default

# The driver to determine Neutron subnets for pod ports (string value)
#pod_subnets_driver = default

# The driver to determine Neutron subnets for services (string value)
#service_subnets_driver = default

# The driver to determine Neutron security groups for pods (string value)
#pod_security_groups_driver = default

# The driver to determine Neutron security groups for services (string value)
#service_security_groups_driver = default

# The driver that provides VIFs for Kubernetes Pods. (string value)
#pod_vif_driver = neutron-vif

# The driver that provides LoadBalancers for Kubernetes Endpoints (string
# value)
#endpoints_lbaas_driver = lbaasv2

# The Octavia load balancer provider that will be used to support Kubernetes
# Endpoints (string value)
#endpoints_driver_octavia_provider = default

# The driver that manages VIFs pools for Kubernetes Pods (string value)
#vif_pool_driver = noop

# Enable port debug to force kuryr port names to be set to their corresponding
# pod names. (boolean value)
#port_debug = false

# The driver that provides external IP for LB at Kubernetes (string value)
#service_public_ip_driver = neutron_floating_ip

# Enable Manager to manage the pools. (boolean value)
#enable_manager = false

# Time (in seconds) the watcher retries watching for. (integer value)
#watch_retry_timeout = 60

# The comma-separated handlers that should be registered for watching in the
# pipeline. (list value)
#enabled_handlers = vif,lb,lbaasspec

# Enable kuryr-controller active/passive HA. Only supported in containerized
# deployments on Kubernetes or OpenShift. (boolean value)
#controller_ha = false

# Port on which leader-elector pod is listening to. (port value)
# Minimum value: 0
# Maximum value: 65535
#controller_ha_elector_port = 16401

# Driver for network policies (string value)
#network_policy_driver = default

# The drivers that provide additional VIFs for Kubernetes Pods. (list value)
#multi_vif_drivers = noop


[kuryr-kubernetes]

#
# From kuryr_kubernetes
#

# Directory where Kuryr-kubernetes python module is installed. (string value)
#pybasedir = /opt/stack/kuryr-k8s-controller


[namespace_handler_caching]

#
# From kuryr_kubernetes
#

# (boolean value)
#caching = true

# (integer value)
#cache_time = 120


[namespace_sg]

#
# From kuryr_kubernetes
#

# Default security group to allow traffic from the namespaces into the default
# namespace. (string value)
#sg_allow_from_namespaces = <None>

# Default security group to allow traffic from the default namespaces into the
# other namespaces. (string value)
#sg_allow_from_default = <None>


[namespace_subnet]

#
# From kuryr_kubernetes
#

# Default Neutron router ID where pod subnet(s) is connected (string value)
#pod_router = <None>

# Default Neutron subnet pool ID where pod subnets get their cidr from (string
# value)
#pod_subnet_pool = <None>


[neutron]
auth_url = http://10.0.1.11/identity
username = admin
user_domain_name = Default
password = password
project_name = admin
project_domain_name = Default
auth_type = password
# Configuration options for OpenStack Neutron

#
# From kuryr_kubernetes
#

# Authentication URL (string value)
#auth_url = <None>

# Authentication type to load (string value)
# Deprecated group/name - [neutron]/auth_plugin
#auth_type = <None>

# PEM encoded Certificate Authority to use when verifying HTTPs connections.
# (string value)
#cafile = <None>

# PEM encoded client certificate cert file (string value)
#certfile = <None>

# Collect per-API call timing information. (boolean value)
#collect_timing = false

# Optional domain ID to use with v3 and v2 parameters. It will be used for both
# the user and project domain in v3 and ignored in v2 authentication. (string
# value)
#default_domain_id = <None>

# Optional domain name to use with v3 API and v2 parameters. It will be used
# for both the user and project domain in v3 and ignored in v2 authentication.
# (string value)
#default_domain_name = <None>

# Name of default subnetpool version 4 (string value)
#default_subnetpool_v4 = kuryr

# Name of default subnetpool version 6 (string value)
#default_subnetpool_v6 = kuryr6

# Domain ID to scope to (string value)
#domain_id = <None>

# Domain name to scope to (string value)
#domain_name = <None>

# Enable or Disable dhcp for neutron subnets. (string value)
#enable_dhcp = True

# Type of the neutron endpoint to use. This endpoint will be looked up in the
# keystone catalog and should be one of public, internal or admin. (string
# value)
# Possible values:
# public - <No description provided>
# admin - <No description provided>
# internal - <No description provided>
#endpoint_type = public

# Verify HTTPS connections. (boolean value)
#insecure = false

# PEM encoded client certificate key file (string value)
#keyfile = <None>

# User's password (string value)
#password = <None>

# Domain ID containing project (string value)
#project_domain_id = <None>

# Domain name containing project (string value)
#project_domain_name = <None>

# Project ID to scope to (string value)
# Deprecated group/name - [neutron]/tenant_id
#project_id = <None>

# Project name to scope to (string value)
# Deprecated group/name - [neutron]/tenant_name
#project_name = <None>

# Log requests to multiple loggers. (boolean value)
#split_loggers = false

# Scope for system operations (string value)
#system_scope = <None>

# Tenant ID (string value)
#tenant_id = <None>

# Tenant Name (string value)
#tenant_name = <None>

# Timeout value for http requests (integer value)
#timeout = <None>

# Token (string value)
#token = <None>

# Trust ID (string value)
#trust_id = <None>

# User's domain id (string value)
#user_domain_id = <None>

# User's domain name (string value)
#user_domain_name = <None>

# User id (string value)
#user_id = <None>

# Username (string value)
# Deprecated group/name - [neutron]/user_name
#username = <None>

# Whether a plugging operation is failed if the port to plug does not become
# active (boolean value)
#vif_plugging_is_fatal = false

# Seconds to wait for port to become active (integer value)
#vif_plugging_timeout = 0


[neutron_defaults]
ovs_bridge = br-int
pod_security_groups = 34729009-5955-48d8-8e27-fae7f0fdc80e
pod_subnet = b501e646-9fec-42fc-b76a-2dc76790b671
project = ce59ca140a9249b19a442381c79b58ed
service_subnet = e666a365-1eb5-4866-a926-ff41030e77cf
#
# From kuryr_kubernetes
#

# Default OpenStack project ID for Kubernetes resources (string value)
#project = <None>

# Default Neutron subnet ID for Kubernetes pods (string value)
#pod_subnet = <None>

# Default Neutron security groups' IDs for Kubernetes pods (list value)
#pod_security_groups = <None>

# Default OpenVSwitch integration bridge (string value)
#
# This option has a sample default set, which means that
# its actual default value may vary from the one documented
# below.
#ovs_bridge = br-int

# Default Neutron subnet ID for Kubernetes services (string value)
#service_subnet = <None>

# Default external network ID for Kubernetes services (string value)
#external_svc_net = <None>

# Optional external subnet ID for Kubernetes services (string value)
#external_svc_subnet = <None>

# Default MTU setting for network interface. (integer value)
#network_device_mtu = 1500

# Time (in seconds) that kuryr controller waits for neutron LBaaS to be
# activated (integer value)
#lbaas_activation_timeout = 300

# A mapping of default subnets for certain driverType in a form of <driverType
# >:<SUBNET-ID> (dict value)
#subnet_mapping =

# List of tags that will be applied to all OpenStack (Neutron and Octavia)
# resources created by Kuryr. This can be used to identify and garbage-collect
# them when Kubernetes cluster Kuryr was serving is no longer needed. (list
# value)
#resource_tags =


[node_driver_caching]

#
# From kuryr_kubernetes
#

# (boolean value)
#caching = true

# (integer value)
#cache_time = 3600


[np_handler_caching]

#
# From kuryr_kubernetes
#

# (boolean value)
#caching = true

# (integer value)
#cache_time = 120


[octavia_defaults]

#
# From kuryr_kubernetes
#

# Define the communication mode between load balanacer and its members (string
# value)
#member_mode = L3

# Define the LBaaS SG policy. (string value)
# Possible values:
# create - replace the VIP SG with a new one
# update - add rules to the existing VIP SG
#sg_mode = update


[pod_ip_caching]

#
# From kuryr_kubernetes
#

# (boolean value)
#caching = true

# (integer value)
#cache_time = 3600


[pod_vif_nested]

#
# From kuryr_kubernetes
#

# Neutron subnet ID for k8s worker node vms. (string value)
#worker_nodes_subnet =


[pool_manager]

#
# From kuryr_kubernetes
#

# Absolute path to socket file that will be used for communication with the
# Pool Manager daemon (string value)
#sock_file = /run/kuryr/kuryr_manage.sock


[sriov]

#
# From kuryr_kubernetes
#

# A mapping of default subnets for certain physnets in a form of physnet-name
# :<SUBNET-ID> (dict value)
#default_physnet_subnets =

# Comma-separated list of <physical_network>:<network_device> tuples mapping
# physical network names to the agent's node-specific physical network device
# interfaces of SR-IOV physical function to be used for VLAN networks. (list
# value)
#physical_device_mappings =


[subnet_caching]

#
# From kuryr_kubernetes
#

# (boolean value)
#caching = true

# (integer value)
#cache_time = 3600


[vif_handler_caching]

#
# From kuryr_kubernetes
#

# (boolean value)
#caching = true

# (integer value)
#cache_time = 120


[vif_pool]

#
# From kuryr_kubernetes
#

# Set a maximun amount of ports per pool. 0 to disable (integer value)
#ports_pool_max = 0

# Set a target minimum size of the pool of ports (integer value)
#ports_pool_min = 5

# Number of ports to be created in a bulk request (integer value)
#ports_pool_batch = 10

# Minimun interval (in seconds) between pool updates (integer value)
#ports_pool_update_frequency = 20

# DEPRECATED: Dict with the pool driver and pod driver to be used. If not set,
# it will take them from the kubernetes driver options for pool and pod drivers
# respectively (dict value)
# This option is deprecated for removal since Stein.
# Its value may be silently ignored in the future.
# Reason: Mapping from pool->vif does not allow different vifs to use the same
# pool driver. Use vif_pool_mapping instead.
#pools_vif_drivers =

# Dict with the pod driver and the corresponding pool driver to be used. If not
# set, it will take them from the kubernetes driver options for pool and pod
# drivers respectively (dict value)
#vif_pool_mapping =
